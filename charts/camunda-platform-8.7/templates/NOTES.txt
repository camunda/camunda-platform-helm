# ({{ .Chart.Name }} - {{ .Chart.Version }})

 ######     ###    ##     ## ##     ## ##    ## ########     ###
##    ##   ## ##   ###   ### ##     ## ###   ## ##     ##   ## ##
##        ##   ##  #### #### ##     ## ####  ## ##     ##  ##   ##
##       ##     ## ## ### ## ##     ## ## ## ## ##     ## ##     ##
##       ######### ##     ## ##     ## ##  #### ##     ## #########
##    ## ##     ## ##     ## ##     ## ##   ### ##     ## ##     ##
 ######  ##     ## ##     ##  #######  ##    ## ########  ##     ##

###################################################################

## Installed Services:

- Console:
  - Enabled: {{ .Values.console.enabled }}
  {{- if .Values.console.enabled }}
    {{- if .Values.console.image.tag }}
  - Docker Image used for Console: {{ .Values.console.image.repository }}:{{ .Values.console.image.tag }}
    {{- else }}
  - Docker Image used for Console: {{ .Values.console.image.repository }}:{{ .Values.global.image.tag }}
    {{- end }}
  {{- end }}
- Zeebe:
  - Enabled: {{ .Values.zeebe.enabled }}
  {{- if .Values.zeebe.enabled }}
    {{- if .Values.zeebe.image.tag }}
  - Docker Image used for Zeebe: {{ .Values.zeebe.image.repository }}:{{ .Values.zeebe.image.tag }}
    {{- else }}
  - Docker Image used for Zeebe: {{ .Values.zeebe.image.repository }}:{{ .Values.global.image.tag }}
    {{- end }}
  - Zeebe Cluster Name: {{ tpl .Values.global.zeebeClusterName . | quote }}
  - Prometheus ServiceMonitor Enabled: {{ .Values.prometheusServiceMonitor.enabled }}
  {{- end }}
- Operate:
  - Enabled: {{ .Values.operate.enabled }}
  {{- if .Values.operate.enabled }}
    {{- if .Values.operate.image.tag }}
  - Docker Image used for Operate: {{ .Values.operate.image.repository }}:{{ .Values.operate.image.tag }}
    {{- else }}
  - Docker Image used for Operate: {{ .Values.operate.image.repository }}:{{ .Values.global.image.tag }}
    {{- end }}
  {{- end }}
- Tasklist:
  - Enabled: {{ .Values.tasklist.enabled }}
  {{- if .Values.tasklist.enabled }}
    {{- if .Values.tasklist.image.tag }}
  - Docker Image used for Tasklist: {{ .Values.tasklist.image.repository }}:{{ .Values.tasklist.image.tag }}
    {{- else }}
  - Docker Image used for Tasklist: {{ .Values.tasklist.image.repository }}:{{ .Values.global.image.tag }}
    {{- end }}
  {{- end }}
- Optimize:
  - Enabled: {{ .Values.optimize.enabled }}
  {{- if .Values.optimize.enabled }}
    {{- if .Values.optimize.image.tag }}
  - Docker Image used for Optimize: {{ .Values.optimize.image.repository }}:{{ .Values.optimize.image.tag }}
    {{- else }}
  - Docker Image used for Optimize: {{ .Values.optimize.image.repository }}:{{ .Values.global.image.tag }}
    {{- end }}
  {{- end }}
- Connectors:
  - Enabled: {{ .Values.connectors.enabled }}
  {{- if .Values.connectors.enabled }}
  - Docker Image used for Connectors: {{ .Values.connectors.image.repository }}:{{ .Values.connectors.image.tag }}
  {{- end }}
- Identity:
  - Enabled: {{ .Values.identity.enabled }}
  {{- if .Values.identity.enabled }}
    {{- if .Values.identity.image.tag }}
  - Docker Image used for Identity: {{ .Values.identity.image.repository }}:{{ .Values.identity.image.tag }}
    {{- else }}
  - Docker Image used for Identity: {{ .Values.identity.image.repository }}:{{ .Values.global.image.tag }}
    {{- end }}
  {{- if .Values.identityKeycloak.enabled }}
  - Keycloak: {{ .Values.identityKeycloak.image.repository }}:{{ .Values.identityKeycloak.image.tag }}
  {{- end }}
  {{- end }}
- Web Modeler:
  - Enabled: {{ .Values.webModeler.enabled }}
  {{- if .Values.webModeler.enabled }}
  - Docker images used for Web Modeler:
    - {{ include "webModeler.restapi.image" . }}
    - {{ include "webModeler.webapp.image" . }}
    - {{ include "webModeler.websockets.image" . }}
  {{- end }}
- Elasticsearch:
  - Enabled: {{ .Values.elasticsearch.enabled }}
  {{- if .Values.elasticsearch.enabled }}
  - Docker Image used for Elasticsearch: {{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}
  {{- end }}

### Zeebe

The Cluster itself is not exposed as a service which means that you can use `kubectl port-forward` to access the Zeebe cluster from outside Kubernetes:

> kubectl port-forward svc/{{ tpl .Values.global.zeebeClusterName . }}-gateway 26500:26500 -n {{ .Release.Namespace }}
> kubectl port-forward svc/{{ tpl .Values.global.zeebeClusterName . }}-gateway 8088:8080 -n {{ .Release.Namespace }}

Now you can connect your workers and clients to `localhost:26500`

{{ if or (.Values.zeebe.enabled) (.Values.operate.enabled) (.Values.tasklist.enabled) (.Values.optimize.enabled) (.Values.identity.enabled) }}
### Connecting to Web apps

As part of the Helm charts, an ingress definition can be deployed, but you require to have an Ingress Controller for that Ingress to be Exposed.
In order to deploy the ingress manifest, set `<service>.ingress.enabled` to `true`. Example: `operate.ingress.enabled=true`

If you don't have an ingress controller you can use `kubectl port-forward` to access the deployed web application from outside the cluster:

{{ if .Values.identity.enabled -}}
Identity:
> kubectl port-forward svc/{{ .Release.Name }}-identity 8080:80
{{- end }}
{{ if .Values.operate.enabled -}}
Operate:
> kubectl port-forward svc/{{ .Release.Name }}-operate  8081:80
{{- end }}
{{ if .Values.tasklist.enabled -}}
Tasklist:
> kubectl port-forward svc/{{ .Release.Name }}-tasklist 8082:80
{{- end }}
{{ if .Values.optimize.enabled -}}
Optimize:
> kubectl port-forward svc/{{ .Release.Name }}-optimize 8083:80
{{- end }}
{{ if .Values.webModeler.enabled -}}
Web Modeler:
> kubectl port-forward svc/{{ include "webModeler.webapp.fullname" . }} 8084:80
> kubectl port-forward svc/{{ include "webModeler.websockets.fullname" . }} 8085:80
{{- end }}
{{ if .Values.connectors.enabled -}}
Connectors:
> kubectl port-forward svc/{{ .Release.Name }}-connectors 8086:8080
{{- end }}
{{ if .Values.console.enabled -}}
Console:
> kubectl port-forward svc/{{ .Release.Name }}-console 8087:80
{{- end }}

{{- if and .Values.global.identity.auth.enabled .Values.identity.enabled }}

If you want to use different ports for the services, please adjust the related configs in the values file since these ports are used as redirect URLs for Keycloak.

Authentication via Identity/Keycloak is enabled. To login into one of the services please port-forward to Keycloak
as well, otherwise, a login will not be possible. Make sure you use `18080` as a port.

{{ if .Values.identityKeycloak.enabled -}}
> kubectl port-forward svc/{{ include "common.names.dependency.fullname" (dict "chartName" "keycloak" "chartValues" .Values.identityKeycloak "context" $) | trunc 20 | trimSuffix "-" }} 18080:80
{{- end }}
{{- end }}

Now you can point your browser to one of the service's login pages. Example: http://localhost:8081 for Operate.
{{ if .Values.identity.firstUser.enabled }}
{{- if .Values.identity.firstUser.existingSecret }}
Default user: "{{ .Values.identity.firstUser.username }}", and for password, run:
> kubectl get secret {{ .Values.identity.firstUser.existingSecret }} -o jsonpath='{.data.identity-firstuser-password}' | base64 -d
{{- else }}
Default user and password: "{{ .Values.identity.firstUser.username -}}/{{ .Values.identity.firstUser.password }}"
{{- end }}
{{ end }}

{{- end }}

{{- if .Values.global.ingress.enabled }}
## Combined Ingress

{{ if .Values.identityKeycloak.enabled -}}
- Keycloak Authentication: {{ include "camundaPlatform.keycloakExternalURL" . }}
{{- end }}
{{- if or (.Values.identity.enabled) (.Values.operate.enabled) (.Values.optimize.enabled) (.Values.tasklist.enabled) (.Values.webModeler.enabled) }}
- Web Applications:
  {{ if .Values.console.enabled -}}
  - Console: {{ include "camundaPlatform.consoleExternalURL" . }}
  {{- end }}
  {{ if .Values.identity.enabled -}}
  - Identity: {{ include "camundaPlatform.identityExternalURL" . }}
  {{- end }}
  {{ if .Values.operate.enabled -}}
  - Operate: {{ include "camundaPlatform.operateExternalURL" . }}
  {{- end }}
  {{ if .Values.optimize.enabled -}}
  - Optimize: {{ include "camundaPlatform.optimizeExternalURL" . }}
  {{- end }}
  {{ if .Values.tasklist.enabled -}}
  - Tasklist: {{ include "camundaPlatform.tasklistExternalURL" . }}
  {{- end }}
  {{ if .Values.webModeler.enabled -}}
  - WebModeler WebApp: {{ include "camundaPlatform.webModelerWebAppExternalURL" . }}
  - WebModeler WebSockets: {{ include "camundaPlatform.webModelerWebSocketsExternalURL" . }}
  {{- end }}
{{- end }}
{{- end }}

{{- if or (.Values.identity.ingress.enabled) (.Values.operate.ingress.enabled) (.Values.optimize.ingress.enabled) (.Values.tasklist.ingress.enabled) (.Values.webModeler.ingress.enabled) (.Values.identityKeycloak.ingress.enabled) }}
## Separated Ingress

{{ if .Values.identityKeycloak.ingress.enabled -}}
- Keycloak Authentication: {{ include "camundaPlatform.keycloakExternalURL" . }}
{{- end }}
{{- if or (.Values.identity.ingress.enabled) (.Values.operate.ingress.enabled) (.Values.optimize.ingress.enabled) (.Values.tasklist.ingress.enabled) (.Values.webModeler.ingress.enabled) }}
- Web Applications:
  {{ if .Values.console.ingress.enabled -}}
  - Console: {{ include "camundaPlatform.consoleExternalURL" . }}
  {{- end }}
  {{ if .Values.identity.ingress.enabled -}}
  - Identity: {{ include "camundaPlatform.identityExternalURL" . }}
  {{- end }}
  {{ if .Values.operate.ingress.enabled -}}
  - Operate: {{ include "camundaPlatform.operateExternalURL" . }}
  {{- end }}
  {{ if .Values.optimize.ingress.enabled -}}
  - Optimize: {{ include "camundaPlatform.optimizeExternalURL" . }}
  {{- end }}
  {{ if .Values.tasklist.ingress.enabled -}}
  - Tasklist: {{ include "camundaPlatform.tasklistExternalURL" . }}
  {{- end }}
  {{ if .Values.webModeler.ingress.enabled -}}
  - WebModeler WebApp: {{ include "camundaPlatform.webModelerWebAppExternalURL" . }}
  - WebModeler WebSockets: {{ include "camundaPlatform.webModelerWebSocketsExternalURL" . }}
  {{- end }}
{{- end }}
{{- end }}

{{- if .Values.zeebeGateway.ingress.grpc.enabled }}
- Zeebe Gateway gRPC: {{  include "camundaPlatform.zeebeGatewayGRPCExternalURL" . }}
{{- end }}

{{- if .Values.zeebeGateway.ingress.rest.enabled }}
{{ $proto := ternary "https" "http" .Values.zeebeGateway.ingress.rest.tls.enabled -}}
- Zeebe Gateway REST: {{ $proto }}://{{ tpl .Values.zeebeGateway.ingress.rest.host $ }}
{{- end }}

{{ if .Values.global.createReleaseInfo -}}

## Console configuration

{{ include "camundaPlatform.releaseInfo" . }}

{{ include "camunda.constraints.warnings" . | trim }}

{{- end }}
