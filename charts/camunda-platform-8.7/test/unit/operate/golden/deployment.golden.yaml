---
# Source: camunda-platform/templates/operate/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: camunda-platform-test-operate
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: camunda-platform-test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    app.kubernetes.io/component: operate
    app.kubernetes.io/version: "8.7.5"
  annotations:
    {}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: camunda-platform
      app.kubernetes.io/name: camunda-platform
      app.kubernetes.io/instance: camunda-platform-test
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: camunda-platform
      app.kubernetes.io/component: operate
  template:
    metadata:
      labels:
        app: camunda-platform
        app.kubernetes.io/name: camunda-platform
        app.kubernetes.io/instance: camunda-platform-test
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: camunda-platform
        app.kubernetes.io/component: operate
        app.kubernetes.io/version: "8.7.5"
      annotations:
    spec:
      imagePullSecrets:
        []
      initContainers:
        - name: migration
          image: camunda/operate:8.7.5
          command: ['/bin/sh', '/usr/local/operate/bin/migrate']
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 600m
              memory: 1Gi
          volumeMounts:
            - name: config
              mountPath: /usr/local/operate/config/application.yaml
              subPath: application.yaml
            - name: tmp
              mountPath: /tmp
            - name: camunda
              mountPath: /camunda
      containers:
        - name: operate
          image: camunda/operate:8.7.5
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: CAMUNDA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: camunda-platform-test-license
                  key: CAMUNDA_LICENSE_KEY
            - name: CAMUNDA_IDENTITY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: camunda-platform-test-operate-identity-secret
                  key: operate-secret
            - name: ZEEBE_CLIENT_ID
              value: "zeebe"
            - name: ZEEBE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: camunda-platform-test-zeebe-identity-secret
                  key: zeebe-secret
            - name: ZEEBE_AUTHORIZATION_SERVER_URL
              value: "http://camunda-platform-test-keycloak:80/auth/realms/camunda-platform/protocol/openid-connect/token"
            - name: ZEEBE_TOKEN_AUDIENCE
              value: "zeebe-api"
            - name: ZEEBE_CLIENT_CONFIG_PATH
              value: /tmp/zeebe_auth_cache
            # the host name of Operate that is used when connecting with the Zeebe cluster
            # via atomix-cluster (SWIM)
            - name: ZEEBE_GATEWAY_CLUSTER_HOST
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            # the unique member id (in this case the pod name) that is used as identifier inside the SWIM cluster
            - name: ZEEBE_GATEWAY_CLUSTER_MEMBERID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            # the name of the atomix cluster (SWIM) to connect to (must be the same as for the Zeebe cluster)
            - name: ZEEBE_GATEWAY_CLUSTER_CLUSTERNAME
              value: camunda-platform-test-zeebe
            # the port the service expects requests/messages from the atomix cluster (must be exposed internally)
            - name: ZEEBE_GATEWAY_CLUSTER_PORT
              value: "26502"
            # the initial contact point to join the SWIM (atomix) cluster
            - name: ZEEBE_GATEWAY_CLUSTER_INITIALCONTACTPOINTS
              value: camunda-platform-test-zeebe:26502
          envFrom:
            - configMapRef:
                name: camunda-platform-test-identity-env-vars
            - configMapRef:
                name: camunda-platform-test-documentstore-env-vars
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 600m
              memory: 400Mi
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9600
              name: management
            - containerPort: 26502
              name: internal
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              scheme: HTTP
              port: management
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /usr/local/operate/config/application.yaml
              subPath: application.yaml
            - name: tmp
              mountPath: /tmp
            - name: camunda
              mountPath: /camunda
      volumes:
        - name: config
          configMap:
            name: camunda-platform-test-operate-configuration
            defaultMode: 484
        - name: tmp
          emptyDir: {}
        - name: camunda
          emptyDir: {}
      serviceAccountName: camunda-platform-test-operate
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault