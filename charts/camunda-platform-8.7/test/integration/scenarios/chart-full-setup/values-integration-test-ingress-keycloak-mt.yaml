global:
  multitenancy:
    enabled: true
  # for bitnami images
  imagePullSecrets:
    - index-docker-io
  # for camunda images
  image:
    pullSecrets:
      - name: index-docker-io
  commonLabels:
    janitor/ttl: 1h
    camunda.cloud/ephemeral: "true"
  secrets:
    autoGenerated: false
  ingress:
    enabled: true
    className: nginx
    # The Ingress host will be added via CLI.
    host: "camunda.example.com"
    tls:
      enabled: true
      # A wildcard certificate will be used.
      secretName: camunda-platform
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "{{ .Values.global.ingress.host }}"
      external-dns.alpha.kubernetes.io/ttl: "60"
  elasticsearch:
    enabled: true
    external: true
    prefix: $ORCHESTRATION_INDEX_PREFIX-$FLOW
    auth:
      username: elastic
      secret:
        existingSecret: infra-credentials
        existingSecretKey: elasticsearch-password
    url:
      protocol: http
      host: elasticsearch.elasticsearch-21-6-3.svc.cluster.local
      port: 9200
  
  identity:
    keycloak:
      url:
        protocol: http
        host: keycloak-headless.keycloak-24-9-0.svc.cluster.local
        port: 8080
      realm: "/realms/$KEYCLOAK_REALM"
      auth:
        adminUser: "admin"
        existingSecret: "infra-credentials"
        existingSecretKey: "keycloak-admin-password"
    auth:
      publicIssuerUrl: "https://{{ .Values.global.ingress.host }}/auth/realms/camunda-platform"
      admin:
        existingSecret:
          name: "integration-test-credentials"
        existingSecretKey: "identity-admin-client-password"
      connectors:
        existingSecret:
          name: "integration-test-credentials"
        existingSecretKey: "identity-connectors-client-password"
      console:
        redirectUrl: "https://{{ .Values.global.ingress.host }}"
        existingSecret:
          name: "integration-test-credentials"
        existingSecretKey: "identity-console-client-password"
      operate:
        redirectUrl: "https://{{ .Values.global.ingress.host }}/operate"
        existingSecret:
          name: "integration-test-credentials"
        existingSecretKey: "identity-operate-client-password"
      tasklist:
        redirectUrl: "https://{{ .Values.global.ingress.host }}/tasklist"
        existingSecret:
          name: "integration-test-credentials"
        existingSecretKey: "identity-tasklist-client-password"
      optimize:
        redirectUrl: "https://{{ .Values.global.ingress.host }}/optimize"
        existingSecret:
          name: "integration-test-credentials"
        existingSecretKey: "identity-optimize-client-password"
      webModeler:
        redirectUrl: "https://{{ .Values.global.ingress.host }}/modeler"
      zeebe:
        existingSecret:
          name: "integration-test-credentials"
        existingSecretKey: "identity-zeebe-client-password"

identity:
  contextPath: "/identity"
  firstUser:
    existingSecret: "integration-test-credentials"
    existingSecretKey: "identity-user-password"

identityKeycloak:
  enabled: false

operate:
  contextPath: "/operate"

optimize:
  contextPath: "/optimize"
  env:
    - name: CAMUNDA_OPTIMIZE_ELASTICSEARCH_SETTINGS_INDEX_PREFIX
      value: $OPTIMIZE_INDEX_PREFIX-$FLOW
    - name: CAMUNDA_OPTIMIZE_ZEEBE_NAME
      value: $ORCHESTRATION_INDEX_PREFIX-$FLOW

zeebe:
  broker:
    exporters:
      elasticsearch:
        index:
          prefix: "$ORCHESTRATION_INDEX_PREFIX-$FLOW"

tasklist:
  contextPath: "/tasklist"

connectors:
  contextPath: "/connectors"

webModeler:
  enabled: true
  contextPath: "/modeler"
  image:
    pullSecrets:
    - name: index-docker-io
    - name: registry-camunda-cloud
  restapi:
    mail:
      # This value is required, otherwise the restapi pod wouldn't start.
      fromAddress: noreply@example.com

# WebModeler Database.
postgresql:
  enabled: true
  auth:
    existingSecret: "integration-test-credentials"
    secretKeys:
      adminPasswordKey: "webmodeler-postgresql-admin-password"
      userPasswordKey: "webmodeler-postgresql-user-password"

zeebeGateway:
  contextPath: "/zeebe"
  ingress:
    grpc:
      enabled: true
      className: nginx
      host: "zeebe-{{ .Values.global.ingress.host }}"
      tls:
        enabled: true
        # A wildcard certificate will be used.
        secretName: camunda-platform-zeebe-gateway
      annotations:
        external-dns.alpha.kubernetes.io/hostname: "zeebe-{{ .Values.global.ingress.host }}"
        external-dns.alpha.kubernetes.io/ttl: "60"

identityPostgresql:
  enabled: true
  auth:
    existingSecret: "integration-test-credentials"
    secretKeys:
      adminPasswordSecretKey: identity-keycloak-postgresql-admin-password
      userPasswordKey: identity-keycloak-postgresql-user-password

console:
  enabled: true
  contextPath: "/"
  image:
    pullSecrets:
    - name: index-docker-io
    - name: registry-camunda-cloud

elasticsearch:
  enabled: false

prometheusServiceMonitor:
  enabled: false
  labels:
    release: kube-prometheus-stack
