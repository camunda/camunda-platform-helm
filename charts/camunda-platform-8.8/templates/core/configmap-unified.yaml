{{- if .Values.core.enabled -}}
kind: ConfigMap
metadata:
  name: {{ include "core.fullname" . }}-configuration-unified
  labels:
    {{- include "core.labels" . | nindent 4 }}
apiVersion: v1
data:
  startup.sh: |
    # The Node ID depends on the StatefulSet Pod's name so it cannot be templated in the StatefulSet level.
    # The value of "node-id" is calculated in the "startup.sh" file and exported as "VALUES_NODE_ID" env var.
    export VALUES_NODE_ID="${VALUES_NODE_ID:-$[${K8S_NAME##*-} * {{.Values.global.multiregion.regions}} + {{.Values.global.multiregion.regionId}}]}"
    echo "export VALUES_NODE_ID=${VALUES_NODE_ID}"

    if [ "${ZEEBE_RESTORE}" = "true" ]; then
      exec /usr/local/camunda/bin/restore --backupId=${ZEEBE_RESTORE_FROM_BACKUP_ID}
    else
      exec /usr/local/camunda/bin/camunda
    fi

  {{- if .Values.core.configuration }}
  application.yaml: |
    {{ .Values.core.configuration | indent 4 | trim }}
  {{- else }}
  application.yaml: |
    {{- (include (print $.Template.BasePath "/core/files/_application-unified.yaml") $) | indent 4 }}
  {{- end }}
  log4j2.xml: |
  {{- if .Values.core.log4j2 }}
    {{ .Values.core.log4j2 | indent 4 | trim }}
  {{- end }}

  {{- range $key, $val := .Values.core.extraConfiguration }}
  {{ $key }}: |
    {{ $val | indent 4 | trim }}
  {{- end }}
{{- end }}
