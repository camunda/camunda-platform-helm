{{/*
This file name should start with an underscore to avoid rendering it as a template.
It is included (imported) in the ConfigMap.
*/}}
spring:
  profiles:
    active: {{ include "core.enabledProfiles" . | quote }}

server:
  address: 0.0.0.0
  port: {{ .Values.core.service.httpPort }}
  # ssl:
  #   enabled: true
  #   certificate: /path/to/my/cert.pem
  #   certificate-private-key: /path

management:
  server:
    address: 0.0.0.0
    port: {{ .Values.core.service.managementPort }}
    # ssl:
    #   enabled: true
  {{- if .Values.core.contextPath }}
  endpoint: {{ printf "/%s/actuator" .Values.core.contextPath | quote }}
  {{- end }}

camunda:
  system:
    cpu-thread-count: {{ .Values.core.cpuThreadCount }}
    io-thread-count: {{ .Values.core.ioThreadCount }}
    clock-controlled: false
    validate-restore-config: true
    upgrade:
      enable-version-check: true

  api:
    grpc:
      address: 0.0.0.0
      port: {{ .Values.core.service.grpcPort }}
      # ssl:
      #   enabled: true
      #   certificate: /path/to/my/cert.pem
      #   certificate-private-key: /path
      # interceptors: []
      #   # - id: 'id1'
      #   #   jar-path: './lib/myInterceptor.jar'
      #   #   class-name: 'MyGrpcInterceptor'
      # management-threads: 1
    # long-polling:
    #   enabled: true
    #   timeout: 20000
    #   probe-timeout: '10s'
    #   min-empty-responses: 3
    # rest:
    #   filters: []
    #     # - id: 'id1'
    #     #   jar-path: './lib/myFilter.jar'
    #     #   class-name: 'MyRestFilter'

  cluster:
    # metadata:
    #   sync-delay: '10s'
    #   sync-request-timeout: '2s'
    #   gossip-fanout: 2
    network:
      host: null
      advertised-host: null
      # port-offset: 0
      # max-message-size: '4MB'
      # socket-send-buffer: '1MB'
      # socket-receive-buffer: '1MB'
      # heartbeat-timeout: '15s'
      # heartbeat-interval: '5s'
      command-api:
        # default-port:
        # host:
        port: {{ .Values.core.service.commandPort }}
        # advertisedHost:
        # advertisedPort:
      internal-api:
        # default-port:
        # host:
        port: {{ .Values.core.service.internalPort }}
        # advertisedHost:
        # advertisedPort:
    initial-contact-points:
      {{- range (untilStep 0 (int .Values.core.clusterSize) 1) }}
        - {{ include "core.legacyName" $ }}-{{ . }}.${K8S_SERVICE_NAME}:{{$.Values.core.service.internalPort}}
      {{- end }}
    # TODO: Double-check if this is the same as .Values.core.clusterSize.
    node-count: {{ .Values.core.clusterSize | quote }}
    # The Node ID depends on the StatefulSet Pod's name so it cannot be templated in the StatefulSet level.
    # The value of "node-id" is calculated in the "startup.sh" file and exported as "VALUES_NODE_ID" env var.
    node-id: ${VALUES_NODE_ID}
    partition-count: {{ .Values.core.partitionCount | quote }}
    replication-factor: {{ .Values.core.replicationFactor | quote }}
    size: {{ .Values.core.clusterSize | quote }}
    name: {{ tpl .Values.global.zeebeClusterName . }}
    # membership:
    #   broadcast-updates: true
    #   broadcast-disputes: true
    #   notify-suspect: false
    #   probe-interval: '1s'
    #   probe-timeout: '100ms'
    #   suspect-probes: 3
    #   failure-timeout: '3s'
    #   sync-interval: '10s'
    #   gossip-fanout: 2
    #   gossip-interval: '250ms'
    # raft:
    #   priority-election-enabled: true
    #   flush-enabled: true
    #   flush-delay: 0s
    #   heartbeat-interval: '250ms'
    #   election-timeout: '2.5s'
    #   max-appends-per-follower: 6
    #   max-appends-batch-size: 32KB
    #   disable-explicit-raft-flush: false
    #   request-timeout: 2.5s
    #   snapshot-request-timeout: 2.5s
    #   snapshot-chunk-size: 1GB
    #   configuration-change-timeout: 10s
    #   max-quorum-response-timeout: 0s
    #   min-step-down-failure-count: 3
    #   prefer-snapshot-replicationThreshold: 100
    #   preallocate-segment-files: true
    # compression-algorithm: 'none'

  data:
    {{- if .Values.core.history.retention.enabled }}
    retention:
      enabled: true
      minimum-age: {{ .Values.core.history.retention.minimumAge | quote }}
    {{- end }}
    snapshot-period: {{ .Values.core.data.snapshotPeriod | quote }}
    # export:
    #   distribution-interval: '15s'
    #   skip-records: []
    #   execution-metrics-enabled: false
    # backup:
    #   repository-name: ''
    #   snapshot-timeout: 0
    #   incomplete-check-timeout: 5m
    #   store: 'NONE'
    #   s3:
    #     bucket-name:
    #     endpoint:
    #     region:
    #     access-key:
    #     secret-key:
    #     api-call-timeout: '180s'
    #     force-path-style-access: false
    #     compression:
    #     max-concurrent-connections: 50
    #     connection-acquisition-timeout: '45s'
    #     base-path:
    #   gcs:
    #     bucket-name:
    #     endpoint:
    #     host:
    #     auth: 'AUTO'
    #   azure:
    #     endpoint:
    #     account-name:
    #     account-key:
    #     connection-string:
    #     base-path:
    #     create-container: true
    #     sas-token:
    #       type:
    #       value:
    #   filesystem:
    #     base-path:
    primary-storage:
      disk:
        free-space:
          processing: {{ .Values.core.data.disk.freeSpace.processing | quote }}
          replication: {{ .Values.core.data.disk.freeSpace.replication | quote }}
    secondary-storage:
      type: {{ include "core.secondaryStorage" . | quote -}}
      {{- if .Values.global.elasticsearch.enabled }}
      elasticsearch:
        url: {{ include "camundaPlatform.elasticsearchURL" . | quote }}
        cluster-name: {{ .Values.global.elasticsearch.clusterName | quote }}
        username: {{ .Values.global.elasticsearch.auth.username | quote }}
        password: ${VALUES_ELASTICSEARCH_PASSWORD:}
        {{- if .Values.global.elasticsearch.tls.enabled }}
        security:
          enabled: false
          # TODO: Check what kind of certificate is expected here?
          certificate-path: ''
          verify-hostname: true
          self-signed: false
        {{- end }}
        index-prefix: {{ .Values.global.elasticsearch.prefix | quote }}
      {{- end }}
      {{- if .Values.global.opensearch.enabled }}
      opensearch:
        url: {{ include "camundaPlatform.opensearchURL" . | quote }}
        cluster-name: {{ .Values.global.opensearch.clusterName | quote }}
        username: {{ .Values.global.opensearch.auth.username | quote }}
        password: ${VALUES_OPENSEARCH_PASSWORD:}
        {{- if .Values.global.opensearch.tls.enabled }}
        security:
          enabled: false
          # TODO: Check what kind of certificate is expected here?
          certificate-path: ''
          verify-hostname: true
          self-signed: false
        {{- end }}
        index-prefix: {{ .Values.global.opensearch.prefix | quote }}
    {{- end }}

  security:
    # TODO: What kind of value is expected here?
    base-url: {{ include "identity.internalUrl" . | quote }}
    issuer-url: {{ include "camundaPlatform.authIssuerUrl" . | quote }}
    issuer-backend-url: {{ include "camundaPlatform.authIssuerBackendUrl" . | quote }}
    redirect-root-url: {{ tpl .Values.global.identity.auth.core.redirectUrl . | quote }}
    client-secret: ${VALUES_CAMUNDA_CORE_CLIENT_SECRET:}
    audience: {{ include "core.authAudience" . | quote }}
    authentication:
      unprotected-api: {{ .Values.global.security.authentication.unprotectedApi }}
      method: 'oidc'
      {{- if eq .Values.global.security.authentication.method "oidc" }}
      oidc:
        client-id: {{ include "core.authClientId" . | quote }}
      {{- end }}
    authorization: {{ .Values.global.security.authorizations.enabled }}
    multiTenancy:
      checksEnabled: {{ .Values.global.multitenancy.checksEnabled }}
      apiEnabled: {{ .Values.global.multitenancy.apiEnabled }}

  webapp:
    common:
      enterprise: true
      roles:
        - owner
      # TODO: Update after moving `global.security` to `core.security`.
      users:
        user-id: 'demo'
        user-password: 'demo'
        user-display-name: 'demo'
        # operator-user-id: 'act'
        # operator-password: 'act'
        # operator-display-name: 'act'
        # reader-user-id: 'view'
        # reader-password: 'view'
        # reader-display-name: 'view'
    {{- if .Values.core.profiles.operate }}
    operate:
      enabled: true
      # operation-executor:
      #   enabled: true
      #   thread-count: 3
      #   queue-size: 10
      #   batch-size: 500
      #   deletion-batch-size: 5000
      #   worker-id: random-uuid
      #   lock-timeout: '60s'
      # alerting-webbook: ''
      zeebe:
        gateway-address: {{ (printf "%s:%d" (include "core.fullname" .) .Values.core.service.grpcPort)| quote }}
        secure: false
        certificate-path: ''
      # TODO: What kind of value is expected here compared to the 8.7 version?
      importer-enabled: true
    {{- end }}
    {{- if .Values.core.profiles.tasklist }}
    tasklist:
      enabled: true
      # TODO: What kind of value is expected here compared to the 8.7 version?
      importer-enabled: true
    {{- end }}
    session:
      persistent: true
