{{- if and .Values.connectors.enabled (eq .Values.connectors.inbound.mode "credentials") }}
{{- $secretName := include "connectors.authCredentialsSecretName" . }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels: {{- include "connectors.labels" . | nindent 4 }}
type: Opaque
data:
  {{ .Values.connectors.inbound.auth.existingSecretKey }}: {{ include "common.secrets.passwords.manage" (dict "secret" $secretName "key" .Values.connectors.inbound.auth.existingSecretKey "length" 10 "providedValues" (list "connectors.inbound.auth.existingSecret") "context" $) }}
{{- end }}
