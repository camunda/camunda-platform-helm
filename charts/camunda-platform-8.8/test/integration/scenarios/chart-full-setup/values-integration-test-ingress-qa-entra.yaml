global:
  image:
    pullPolicy: Always
  secrets:
    autoGenerated: false
  ingress:
    enabled: true
    className: nginx
    # The Ingress host will be added via CLI.
    host: "camunda.example.com"
    tls:
      enabled: true
      # A wildcard certificate will be used.
      secretName: camunda-platform
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "{{ .Values.global.ingress.host }}"
      external-dns.alpha.kubernetes.io/ttl: "60"
  identity:
    auth:
      enabled: true
      issuer: https://login.microsoftonline.com/<directoryId>/v2.0
      issuerBackendUrl: https://login.microsoftonline.com/<directoryId>/v2.0
      tokenUrl: https://login.microsoftonline.com/<directoryId>/oauth2/v2.0/token
      jwksUrl: https://login.microsoftonline.com/<directoryId>/discovery/v2.0/keys
      publicIssuerUrl: https://login.microsoftonline.com/<directoryId>/v2.0
      type: "MICROSOFT"
      orchestration:
        clientId: <clientId>
        audience: <clientId>
        existingSecret:
          name: integration-test-credentials
        existingSecretKey: entra-child-app-client-secret
        redirectUrl: "https://{{ .Values.global.ingress.host }}/orchestration"
      identity:
        clientId: <clientId>
        audience: <clientId>
        # this existngSecret must be a string literal
        existingSecret: <clientSecret>
        initialClaimValue: d70412f6-5a6e-4271-8e45-fa497056ac1e # Hamza's object ID
        redirectUrl: "https://{{ .Values.global.ingress.host }}/identity"
      optimize:
        clientId: <clientId>
        audience: <clientId>
        existingSecret:
          name: integration-test-credentials
        existingSecretKey: entra-child-app-client-secret
        redirectUrl: "https://{{ .Values.global.ingress.host }}/optimize"
      connectors:
        clientId: <clientId>
        audience: <clientId>
        clientApiAudience: <clientId>
        existingSecret:
          name: integration-test-credentials
        existingSecretKey: entra-child-app-client-secret
        tokenScope: <clientId>/.default
      webModeler:
        clientId: <clientId>
        audience: <clientId>
        clientApiAudience: <clientId>
        publicApiAudience: <clientId>
        redirectUrl: "https://{{ .Values.global.ingress.host }}/modeler"
      console:
        wellKnown: https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration
        clientId: <clientId>
        audience: <clientId>
        existingSecret:
          name: integration-test-credentials
        existingSecretKey: entra-child-app-client-secret
        tokenScope: <clientId>/.default
        redirectUrl: "https://{{ .Values.global.ingress.host }}/modeler"

orchestration:
  image:
    tag: "$E2E_TESTS_ORCHESTRATION_IMAGE_TAG"
  security:
    authentication:
      method: oidc
      unprotectedApi: false
      oidc:
        usernameClaim: oid
        groupsClaim: ""
    authorizations:
      enabled: true
    initialization:
      mappingRules:
        - mappingRuleID: demo-user-mapping-rule
          claimName: oid
          claimValue: d70412f6-5a6e-4271-8e45-fa497056ac1e # Hamza's object ID
  env:
    - name: CAMUNDA_SECURITY_INITIALIZATION_MAPPINGRULES_0_MAPPINGRULEID
      value: "demo-user-mapping-rule"
    - name: CAMUNDA_SECURITY_INITIALIZATION_MAPPINGRULES_0_CLAIMNAME
      value: "oid"
    - name: CAMUNDA_SECURITY_INITIALIZATION_MAPPINGRULES_0_CLAIMVALUE
      value: d70412f6-5a6e-4271-8e45-fa497056ac1e
    - name: CAMUNDA_SECURITY_INITIALIZATION_MAPPINGRULES_1_MAPPINGRULEID
      value: "venom-client-mapping-rule"
    - name: CAMUNDA_SECURITY_INITIALIZATION_MAPPINGRULES_1_CLAIMNAME
      value: "client_id"
    - name: CAMUNDA_SECURITY_INITIALIZATION_MAPPINGRULES_1_CLAIMVALUE
      value: "venom"
    - name: CAMUNDA_SECURITY_INITIALIZATION_MAPPINGRULES_2_MAPPINGRULEID
      value: "connectors-client-mapping-rule"
    - name: CAMUNDA_SECURITY_INITIALIZATION_MAPPINGRULES_2_CLAIMNAME
      value: "client_id"
    - name: CAMUNDA_SECURITY_INITIALIZATION_MAPPINGRULES_2_CLAIMVALUE
      value: "connectors"
    - name: CAMUNDA_SECURITY_INITIALIZATION_DEFAULTROLES_ADMIN_MAPPINGRULES_0
      value: "demo-user-mapping-rule"
    - name: CAMUNDA_SECURITY_INITIALIZATION_DEFAULTROLES_ADMIN_MAPPINGRULES_1
      value: "venom-client-mapping-rule"
    - name: CAMUNDA_SECURITY_INITIALIZATION_DEFAULTROLES_ADMIN_MAPPINGRULES_2
      value: "connectors-client-mapping-rule"

identityKeycloak:
  enabled: false

optimize:
  enabled: true
  image:
    tag: "$E2E_TESTS_OPTIMIZE_IMAGE_TAG"

webModeler:
  enabled: true
  restapi:
    image:
      tag: "$E2E_TESTS_WEBMODELER_IMAGE_TAG"
  webapp:
    image:
      tag: "$E2E_TESTS_WEBMODELER_IMAGE_TAG"
  websockets:
    image:
      tag: "$E2E_TESTS_WEBMODELER_IMAGE_TAG"

webModelerPostgresql:
  enabled: true

console:
  enabled: true
  image:
    tag: "$E2E_TESTS_CONSOLE_IMAGE_TAG"
  overrideConfiguration: |
    camunda:
      console:
        managed:
          releases:
            - name: integration
              namespace: "$TEST_NAMESPACE"
              tags:
                - dev
                - custom
                - stage
                - prod
                - test
              custom-properties:
                - description: "This is the main integration environment for the Camunda Platform."
                  links:
                    - name: "Camunda"
                      url: "https://camunda.com"
                    - name: "Camunda Docs"
                      url: "https://docs.camunda.io"
  env:
    - name: CAMUNDA_CONSOLE_EXPERIMENTAL_TAGS
      value: 'true'      
    - name: CAMUNDA_IDENTITY_JWKS_URL
      value: https://login.microsoftonline.com/<directoryId>/discovery/v2.0/keys

identity:
  enabled: true
  image:
    tag: "$E2E_TESTS_IDENTITY_IMAGE_TAG"

connectors:
  image:
    tag: "$E2E_TESTS_CONNECTORS_IMAGE_TAG"
  env:
    - name: CAMUNDA_CLIENT_AUTH_SCOPE
      value: <clientId>/.default
