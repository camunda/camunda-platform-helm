global:
  secrets:
    autoGenerated: false
  ingress:
    enabled: true
    className: nginx
    # The Ingress host will be added via CLI.
    host: "camunda.example.com"
    tls:
      enabled: true
      # A wildcard certificate will be used.
      secretName: camunda-platform
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "{{ .Values.global.ingress.host }}"
      external-dns.alpha.kubernetes.io/ttl: "60"
  # identity:
  #   auth:
  #     enabled: false
  #     publicIssuerUrl: "https://{{ .Values.global.ingress.host }}/auth/realms/camunda-platform"
  #     admin:
  #       enabled: true
  #       existingSecret:
  #         name: "integration-test-credentials"
  #     #######################
  #     # Management Group
  #     #######################
  #     webModeler:
  #       redirectUrl: "https://{{ .Values.global.ingress.host }}/modeler"
  #     console:
  #       redirectUrl: "https://{{ .Values.global.ingress.host }}"
  #       existingSecret:
  #         name: "integration-test-credentials"
  #     #######################
  #     # Orchestration Group
  #     #######################
  #     core:
  #       redirectUrl: "https://{{ .Values.global.ingress.host }}/core"
  #       existingSecret:
  #         name: "integration-test-credentials"
  #     connectors:
  #       existingSecret:
  #         name: "integration-test-credentials"
  #     optimize:
  #       redirectUrl: "https://{{ .Values.global.ingress.host }}/optimize"
  #       existingSecret:
  #         name: "integration-test-credentials"
  security:
    authentication:
      method: basic

# identity:
#   enabled: false
#   contextPath: "/identity"
#   firstUser:
#     existingSecret: "integration-test-credentials"
#
# identityKeycloak:
#   enabled: false
#   postgresql:
#     auth:
#       existingSecret: "integration-test-credentials"
#       secretKeys:
#         adminPasswordKey: "identity-keycloak-postgresql-admin-password"
#         userPasswordKey: "identity-keycloak-postgresql-user-password"
#   auth:
#     existingSecret: "integration-test-credentials"
#     passwordSecretKey: "identity-keycloak-admin-password"
#
# optimize:
#   enabled: false
#   contextPath: "/optimize"
#
# connectors:
#   contextPath: "/connectors"
#
# webModeler:
#   enabled: false
#   contextPath: "/modeler"
#   image:
#     pullSecrets:
#       - name: index-docker-io
#       - name: registry-camunda-cloud
#   restapi:
#     mail:
#       # This value is required, otherwise the restapi pod wouldn't start.
#       fromAddress: noreply@example.com
#
# # WebModeler Database.
# webModelerPostgresql:
#   enabled: false
#   auth:
#     existingSecret: "integration-test-credentials"
#     secretKeys:
#       adminPasswordKey: "webmodeler-postgresql-admin-password"
#       userPasswordKey: "webmodeler-postgresql-user-password"

core:
  contextPath: "/core"
  ingress:
    grpc:
      enabled: true
      className: nginx
      host: "grpc-{{ .Values.global.ingress.host }}"
      tls:
        enabled: true
        # A wildcard certificate will be used.
        secretName: camunda-platform-zeebe-gateway
      annotations:
        external-dns.alpha.kubernetes.io/hostname: "core-{{ .Values.global.ingress.host }}"
        external-dns.alpha.kubernetes.io/ttl: "60"

console:
  enabled: false
  contextPath: "/"
  image:
    pullSecrets:
      - name: index-docker-io
      - name: registry-camunda-cloud

elasticsearch:
  maxUnavailable: 0

prometheusServiceMonitor:
  enabled: true
  labels:
    release: kube-prometheus-stack
