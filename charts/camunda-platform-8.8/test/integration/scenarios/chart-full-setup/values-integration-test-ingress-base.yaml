global:
  secrets:
    autoGenerated: false
  ingress:
    enabled: true
    className: nginx
    # The Ingress host will be added via CLI.
    host: "camunda.example.com"
    tls:
      enabled: true
      # A wildcard certificate will be used.
      secretName: camunda-platform
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "{{ .Values.global.ingress.host }}"
      external-dns.alpha.kubernetes.io/ttl: "60"
  identity:
    auth:
      enabled: false
  security:
    authentication:
      method: basic


identity:
  enabled: false

identityKeycloak:
  enabled: false
  postgresql:
    auth:
      existingSecret: "integration-test-credentials"
      secretKeys:
        adminPasswordKey: "identity-keycloak-postgresql-admin-password"
        userPasswordKey: "identity-keycloak-postgresql-user-password"
  auth:
    existingSecret: "integration-test-credentials"
    passwordSecretKey: "identity-keycloak-admin-password"

optimize:
  enabled: false

connectors:
  contextPath: "/connectors"

webModeler:
  enabled: false
  contextPath: "/modeler"
  image:
    pullSecrets:
      - name: index-docker-io
      - name: registry-camunda-cloud
  restapi:
    mail:
      # This value is required, otherwise the restapi pod wouldn't start.
      fromAddress: noreply@example.com

# WebModeler Database.
webModelerPostgresql:
  enabled: false

core:
  contextPath: "/core"
  ingress:
    grpc:
      enabled: true
      className: nginx
      host: "grpc-{{ .Values.global.ingress.host }}"
      tls:
        enabled: true
        # A wildcard certificate will be used.
        secretName: camunda-platform-zeebe-gateway
      annotations:
        external-dns.alpha.kubernetes.io/hostname: "core-{{ .Values.global.ingress.host }}"
        external-dns.alpha.kubernetes.io/ttl: "60"

console:
  enabled: false
  contextPath: "/"
  image:
    pullSecrets:
      - name: index-docker-io
      - name: registry-camunda-cloud

elasticsearch:
  maxUnavailable: 0

prometheusServiceMonitor:
  enabled: true
  labels:
    release: kube-prometheus-stack
