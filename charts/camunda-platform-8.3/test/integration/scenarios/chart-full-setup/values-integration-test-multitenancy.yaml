global:
  multitenancy:
    enabled: true
  secrets:
    autoGenerated: false
  ingress:
    enabled: true
    className: nginx
    # The Ingress host will be added via CLI.
    host: "camunda.example.com"
    tls:
      enabled: true
      # A wildcard certificate will be used.
      secretName: camunda-platform
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "{{ .Values.global.ingress.host }}"
      external-dns.alpha.kubernetes.io/ttl: "60"

  identity:
    auth:
      publicIssuerUrl: "https://{{ .Values.global.ingress.host }}/auth/realms/camunda-platform"
      admin:
        existingSecret:
          name: "integration-test-credentials"
        existingSecretKey: "identity-admin-client-password"
      connectors:
        existingSecret:
          name: "integration-test-credentials"
      console:
        redirectUrl: "https://{{ .Values.global.ingress.host }}"
        existingSecret:
          name: "integration-test-credentials"
      operate:
        redirectUrl: "https://{{ .Values.global.ingress.host }}/operate"
        existingSecret:
          name: "integration-test-credentials"
      tasklist:
        redirectUrl: "https://{{ .Values.global.ingress.host }}/tasklist"
        existingSecret:
          name: "integration-test-credentials"
      optimize:
        redirectUrl: "https://{{ .Values.global.ingress.host }}/optimize"
        existingSecret:
          name: "integration-test-credentials"
      webModeler:
        redirectUrl: "https://{{ .Values.global.ingress.host }}/modeler"
      zeebe:
        existingSecret:
          name: "integration-test-credentials"

identity:
  env:
    - name: IDENTITY_TENANTS_0_NAME
      value: Default
    - name: IDENTITY_TENANTS_0_TENANTID
      value: <default>
    - name: IDENTITY_TENANTS_0_MEMBERS_0_TYPE
      value: USER
    - name: IDENTITY_TENANTS_0_MEMBERS_0_USERNAME
      value: demo
    - name: IDENTITY_TENANTS_0_MEMBERS_1_TYPE
      value: APPLICATION
    - name: IDENTITY_TENANTS_0_MEMBERS_1_APPLICATIONID
      value: operate
    - name: IDENTITY_TENANTS_0_MEMBERS_2_TYPE
      value: APPLICATION
    - name: IDENTITY_TENANTS_0_MEMBERS_2_APPLICATIONID
      value: test
    - name: IDENTITY_TENANTS_0_MEMBERS_3_TYPE
      value: APPLICATION
    - name: IDENTITY_TENANTS_0_MEMBERS_3_APPLICATIONID
      value: connectors
    - name: IDENTITY_TENANTS_0_MEMBERS_4_TYPE
      value: APPLICATION
    - name: IDENTITY_TENANTS_0_MEMBERS_4_APPLICATIONID
      value: zeebe
    - name: KEYCLOAK_CLIENTS_2_ID
      value: test
    - name: KEYCLOAK_CLIENTS_2_NAME
      value: Test
    - name: KEYCLOAK_CLIENTS_2_SECRET
      valueFrom:
        secretKeyRef:
          name: integration-test-credentials
          key: identity-admin-client-password
    - name: KEYCLOAK_CLIENTS_2_REDIRECT_URIS_0
      value: /dummy
    - name: KEYCLOAK_CLIENTS_2_ROOT_URL
      value: http://dummy
    - name: KEYCLOAK_CLIENTS_2_TYPE
      value: CONFIDENTIAL
    # Identity access.
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_0_RESOURCE_SERVER_ID
      value: camunda-identity-resource-server
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_0_DEFINITION
      value: read
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_1_RESOURCE_SERVER_ID
      value: camunda-identity-resource-server
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_1_DEFINITION
      value: write
    # Operate access.
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_2_RESOURCE_SERVER_ID
      value: operate-api
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_2_DEFINITION
      value: "read:*"
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_3_RESOURCE_SERVER_ID
      value: operate-api
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_3_DEFINITION
      value: "write:*"
    # Tasklist access.
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_4_RESOURCE_SERVER_ID
      value: tasklist-api
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_4_DEFINITION
      value: "read:*"
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_5_RESOURCE_SERVER_ID
      value: tasklist-api
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_5_DEFINITION
      value: "write:*"
    # Optimize access.
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_6_RESOURCE_SERVER_ID
      value: optimize-api
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_6_DEFINITION
      value: "write:*"
    # Zeebe access.
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_7_RESOURCE_SERVER_ID
      value: zeebe-api
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_7_DEFINITION
      value: "write:*"
    # WebModeler access.
    # NOTE: This actually should be only in the chart-with-web-modeler scenarios,
    # but since Helm doesn't support merge lists it's added here.
    # It could be removed later when the env vars could be configured via ConfigMap.
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_8_RESOURCE_SERVER_ID
      value: web-modeler-api
    - name: KEYCLOAK_CLIENTS_2_PERMISSIONS_8_DEFINITION
      value: "write:*"
  contextPath: "/identity"
  fullURL: "https://{{ .Values.global.ingress.host }}/identity"
  firstUser:
    existingSecret: "integration-test-credentials"
  keycloak:
    auth:
      existingSecret: "integration-test-credentials"
    postgresql:
      auth:
        existingSecret: "integration-test-credentials"
  postgresql:
    enabled: true

operate:
  contextPath: "/operate"

optimize:
  contextPath: "/optimize"

tasklist:
  contextPath: "/tasklist"

connectors:
  contextPath: "/connectors"

webModeler:
  enabled: true
  contextPath: "/modeler"
  image:
    pullSecrets:
    - name: index-docker-io
    - name: registry-camunda-cloud
  restapi:
    mail:
      # This value is required, otherwise the restapi pod wouldn't start.
      fromAddress: noreply@example.com
      existingSecret:
        name: "integration-test-credentials"

# database used by Web Modeler
postgresql:
  enabled: true
#   auth:
#     existingSecret: "integration-test-credentials"
#     # Should be set to have a different name of Identity Keycloak PostgreSQL.
#     secretKeys:
#       adminPasswordKey: "webmodeler-postgresql-admin-password"
#       userPasswordKey: "webmodeler-postgresql-user-password"

zeebe-gateway:
  ingress:
    enabled: true
    className: nginx
    host: "zeebe-{{ .Values.global.ingress.host }}"
    tls:
      enabled: true
      # A wildcard certificate will be used.
      secretName: camunda-platform-zeebe-gateway
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "zeebe-{{ .Values.global.ingress.host }}"
      external-dns.alpha.kubernetes.io/ttl: "60"

console:
  enabled: false

elasticsearch:
  maxUnavailable: 0

prometheusServiceMonitor:
  enabled: true
  labels:
    release: kube-prometheus-stack
