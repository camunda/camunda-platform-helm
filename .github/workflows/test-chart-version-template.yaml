# Basic test for maintenance Camunda 8 Helm charts.
name: "Test - Chart Version - Template"

on:
  workflow_call:
    inputs:
      pr-number:
        description: Pull Request number. Required due to a github bug that is not giving the concurrency group the pull_request number from the github event
        required: true
        type: string
      camunda-version:
        description: Camunda version to test
        required: true
        type: string
      case:
        description: Type
        required: true
        type: string
      scenario:
        description: Scenario
        required: true
        type: string
      auth:
        description: Scenario
        required: true
        type: string
      exclude:
        description: Scenario
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ inputs.pr-number }}-${{ inputs.scenario }}-${{ inputs.camunda-version }}-${{ inputs.auth }}-${{ inputs.exclude }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  init:
    name: Init Scenarios
    runs-on: ubuntu-latest
    env:
      SCENARIOS_LIST: ${{ inputs.scenarios }}
    outputs:
      scenarios-formatted: ${{ steps.make-json-array.outputs.json_array }}
    steps:
      - name: Convert string to JSON array and set as output
        id: make-json-array
        run: |
          # For example, this converts the SCENARIOS_LIST, which is a string input ("multitenancy, oidc") to ["multitenancy","oidc"]
          # This is done because it is not possible to pass JSON arrays as input to a workflow. Therefore,
          # a string is passed and converted to a json array
          json=$(echo "$SCENARIOS_LIST" | jq -R -c 'split(",")')
          echo "json_array=$json" | tee -a $GITHUB_OUTPUT

  integration:
    name: Camunda ${{ inputs.camunda-version }} - Integration Test
    permissions:
      contents: read
      id-token: write
      deployments: write
    secrets: inherit
    uses: ./.github/workflows/test-integration-template.yaml
    with:
      identifier: "${{ github.event.pull_request.number }}-intg-${{ inputs.camunda-version }}"
      deployment-ttl: "${{ contains(github.event.pull_request.labels.*.name, 'test-persistent') && '1w' || '' }}"
      flows: "install,upgrade"
      camunda-helm-dir: "camunda-platform-${{ inputs.camunda-version }}"
      camunda-helm-git-ref: "${{ github.event.pull_request.head.sha }}"
      caller-git-ref: "${{ github.event.pull_request.head.sha }}"
      test-case: ${{inputs.case}}
      scenario: ${{inputs.scenario}}
      auth: ${{inputs.auth}}
      exclude: ${{inputs.exclude}}
