# Basic test for maintenance Camunda 8 Helm charts.
name: "Test - Chart Version - Template"

on:
  workflow_call:
    inputs:
      pr-number:
        description: Pull Request number. Required due to a github bug that is not giving the concurrency group the pull_request number from the github event
        required: true
        type: string
      camunda-version:
        description: Camunda version to test
        required: true
        type: string
      case:
        description: Type
        required: true
        type: string
      scenario:
        description: Scenario
        required: true
        type: string
      shortname:
        description: Shortname for the scenario within the identifier
        required: true
        type: string
      auth:
        description: Auth
        required: true
        type: string
      exclude:
        description: Exclude
        required: false
        default: ""
        type: string
      run-all-e2e-tests:
        description: "Run all E2E tests (playwright)"
        required: false
        default: false
        type: boolean
      platforms:
        description: The deployment cloud platform
        default: gke
        required: false
        type: string
      flows:
        description: The flows to run
        default: "install,upgrade"
        type: string
        required: false
      e2e-enabled:
        required: false
        default: true
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ inputs.pr-number }}-${{ inputs.shortname }}-${{ inputs.camunda-version }}-${{ inputs.auth }}-${{ inputs.exclude }}-${{ inputs.platforms }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  parse-platforms:
    name: Parse platforms
    runs-on: ubuntu-latest
    env:
      SCENARIOS_LIST: ${{ inputs.scenarios }}
    outputs:
      platforms: ${{ steps.make-json-array.outputs.platforms }}
    steps:
      - name: Convert string to JSON array and set as output
        id: make-json-array
        run: |
          platforms="${{ inputs.platforms }}"
          echo "platforms=$(jq -cn --arg p "$platforms" '$p | split(",")')" >> "$GITHUB_OUTPUT"
          echo "platforms=$platforms"

  integration:
    name: ${{ matrix.platform }} - ITs
    needs: [parse-platforms]
    permissions:
      contents: read
      id-token: write
      deployments: write
    secrets: inherit
    strategy:
      matrix:
        platform: ${{ fromJson(needs.parse-platforms.outputs.platforms) }}
    uses: ./.github/workflows/test-integration-template.yaml
    with:
      identifier: "${{ github.event.pull_request.number }}-intg-${{ inputs.camunda-version }}-${{ matrix.platform }}"
      deployment-ttl: "${{ contains(github.event.pull_request.labels.*.name, 'test-persistent') && '1w' || '' }}"
      flows: ${{ inputs.flows }}
      camunda-helm-dir: "camunda-platform-${{ inputs.camunda-version }}"
      camunda-helm-git-ref: "${{ github.event.pull_request.head.sha }}"
      caller-git-ref: "${{ github.event.pull_request.head.sha }}"
      test-case: ${{inputs.case}}
      scenario: ${{inputs.scenario}}
      e2e-enabled: ${{ inputs.e2e-enabled }}
      shortname: ${{inputs.shortname}}
      auth: ${{inputs.auth}}
      exclude: ${{inputs.exclude}}
      platforms: ${{ matrix.platform }}
      run-all-e2e-tests: ${{ inputs.run-all-e2e-tests }}
