name: "Test - Unit - Template"

on:
  workflow_call:
    inputs:
      identifier:
        description: The unique identifier of used in the deployment hostname.
        required: true
        type: string
      camunda-helm-git-ref:
        required: false
        default: main
        type: string
      camunda-helm-dir:
        required: false
        default: camunda-platform-alpha
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ inputs.identifier }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  init:
    name: Generate components matrix
    runs-on: ubuntu-latest
    outputs:
      unitTestMatrix: ${{ steps.test-type-vars.outputs.unitTestMatrix }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        ref: "${{ inputs.camunda-helm-git-ref }}"
    - name: Get CI unit test matrix
      id: test-type-vars
      uses: ./.github/actions/test-type-vars
      with:
        chart-dir: "${{ inputs.camunda-helm-dir }}"

  unit:
    name: ${{ matrix.test.name }} - Unit Test
    if: ${{ needs.init.outputs.unitTestMatrix != '' }}
    needs: init
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJson(needs.init.outputs.unitTestMatrix) }}
    env:
      chartPath: "charts/${{ inputs.camunda-helm-dir }}"
    steps:
    - name: ℹ️ Print workflow inputs ℹ️
      env:
        GITHUB_CONTEXT: ${{ toJson(inputs) }}
      run: |
        echo "Workflow Inputs:"
        echo "${GITHUB_CONTEXT}"
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Install env dependencies
      uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6 # v3
    - uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/.asdf/installs/golang/*/packages/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Format
      run: |
        make go.fmt
    - name: Install License Tool
      run: |
        make go.addlicense-install
        asdf reshim golang
    - name: Check License
      run: |
        make go.addlicense-check
    - name: Add helm repos
      run: |
        make helm.repos-add
    - name: Get Helm dependency
      run: |
        make helm.dependency-update
    - name: ⭐️ Test ⭐️
      run: |
        cd charts/${{ inputs.camunda-helm-dir }}/test/unit
        go test $(printf "./%s " ${{ matrix.test.packages }})
