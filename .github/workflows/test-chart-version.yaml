# Basic test for maintenance Camunda 8 Helm charts.
name: "Test - Chart Version"

on:
  pull_request:
    paths:
      - ".github/workflows/chart-validate-template.yaml"
      - ".github/workflows/test-unit-template.yaml"
      - ".github/workflows/test-integration-runner.yaml"
      - ".github/workflows/test-integration-template.yaml"
      - ".github/workflows/test-chart-version-template.yaml"
      - ".github/workflows/test-chart-version.yaml"
      - ".github/config/external-secret/**"
      - ".tool-versions"
      - "charts/camunda-platform-8*/**"
  workflow_dispatch: 
    inputs:
      manual-trigger:
        description: "Manual trigger"
        required: false
        default: "none"
        type: choice
        options:
          - none
          - "all"
          - "8.4"
          - "8.5"
          - "8.6"
          - "8.7"
          - "8.8"
      run-all-e2e-tests:
        description: "Run all E2E tests (playwright)"
        required: false
        default: false
        type: boolean
      platforms:
        description: The deployment cloud platform
        default: "gke"
        required: false
        type: choice
        options:
          - gke
          - eks
          - rosa
          - gke,eks
      flows:
        description: The flows to run
        default: ""
        required: false
        type: choice
        options:
          - install
          - upgrade-patch
          - upgrade-minor
          - install,upgrade-patch
          - install,upgrade-minor
          - install,upgrade-patch,upgrade-minor
      e2e-enabled:
        description: |
          Whether to run the end-to-end tests (playwright).
          Note: The full test suite is changing often. This might not work. We need to change the ways of working between the application teams, distro and QA.
        required: false
        default: true
        type: boolean
      deployment-ttl:
        description: |
          The deployment time-to-live, after which it will be automatically deleted.
          Examples: "30m", "1h", "2h", "1d".
        required: false
        default: 1h
        type: string
      scenario:
        description: Scenario
        required: false
        default: "elasticsearch"
        type: choice
        options:
          - all
          - upgrade-migration
          - keycloak
          - keycloak-mt
          - keycloak-rba
          - oidc
      test-enabled:
        description: Whether to run the IT tests
        required: false
        default: true
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  deployments: write

jobs:
  init:
    name: Generate chart matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-chart-versions.outputs.matrix }}
      camunda-versions: ${{ steps.generate-chart-versions.outputs.camunda-versions }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Generate chart versions
        id: generate-chart-versions
        uses: ./.github/actions/generate-chart-matrix
        with:
          manual-trigger: ${{ github.event.inputs.manual-trigger }}
          manual-scenario: ${{ github.event.inputs.scenario || 'none' }}

  unit-testing:
    if: ${{ needs.init.outputs.camunda-versions != '[]' }}
    name: ${{ matrix.version }} - Unit Test
    needs: [init]
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.init.outputs.camunda-versions) }}
    uses: ./.github/workflows/test-unit-template.yaml
    with:
      identifier: "${{ github.event.pull_request.number || github.ref }}-unit-${{ matrix.version }}"
      camunda-helm-dir: "camunda-platform-${{ matrix.version }}"
      camunda-helm-git-ref: "${{ github.event.pull_request.head.sha }}"

  validation:
    if: ${{ needs.init.outputs.camunda-versions != '[]' }}
    name: ${{ matrix.version }} - Validation
    needs: [init]
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.init.outputs.camunda-versions) }}
    uses: ./.github/workflows/chart-validate-template.yaml
    with:
      identifier: "${{ github.event.pull_request.number || github.ref }}-vald-${{ matrix.version }}"
      camunda-helm-dir: "camunda-platform-${{ matrix.version }}"
      camunda-helm-git-ref: "${{ github.event.pull_request.head.sha }}"

  kind-testing:
    if: ${{ needs.init.outputs.camunda-versions != '[]' }}
    name: Local cluster - KIND ${{ matrix.version }}
    needs: [init, validation]
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.init.outputs.camunda-versions) }}
    permissions:
      contents: read
    secrets: inherit
    uses: ./.github/workflows/test-local-template.yaml
    with:
      identifier: "${{ github.event.pull_request.number || github.ref }}-loc-${{ matrix.version }}"
      camunda-helm-dir: "camunda-platform-${{ matrix.version }}"
      camunda-helm-git-ref: "${{ github.event.pull_request.head.sha }}"

  integration-tests:
    name: ${{ matrix.version }} - ${{ inputs.platforms || 'gke' }} - ${{ matrix.case }} - ${{ matrix.flow }} - ${{ matrix.shortname }}
    needs: [init]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/test-chart-version-template.yaml
    secrets: inherit
    with:
      pr-number: ${{ github.event.pull_request.number || github.event.inputs.manual-trigger }}
      camunda-version: ${{ matrix.version }}
      case: ${{ matrix.case }}
      scenario: ${{ matrix.scenario }}
      shortname: ${{ matrix.shortname }}
      auth: ${{ matrix.auth }}
      platforms: ${{ inputs.platforms || 'gke' }}
      exclude: ${{ matrix.exclude }}
      e2e-enabled: ${{ inputs.e2e-enabled || true }}
      run-all-e2e-tests: ${{ inputs.run-all-e2e-tests || false }} # The full test suite is changing often. This might not work. We need to change the ways of working between the applciation teams, distro and QA
      flows: ${{ inputs.flows || matrix.flow || 'install,upgrade-patch,upgrade-minor' }}
      deployment-ttl: ${{ inputs.deployment-ttl }}
      camunda-version-previous: ${{ matrix.camundaVersionPrevious }}
      test-enabled: ${{ inputs.test-enabled || true }}
