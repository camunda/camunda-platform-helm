name: "Chart - Release"

on:
  # Allow to run the workflow from GitHub UI and other workflows.
  workflow_dispatch:
    inputs:
      trigger:
        description: "Trigger release manually"
        required: false
        default: false
        type: boolean
  pull_request:
    branches:
      - distro-360-release-alphas-to-public-helm-repo

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  init:
    name: Generate components matrix
    # if: ${{ (contains(github.event.*.labels.*.name, 'release') && github.event.pull_request.merged == false) || github.event.inputs.trigger }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-chart-versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Generate chart versions
        id: generate-chart-versions
        uses: ./.github/actions/generate-chart-matrix
        with:
          charts-path: "charts/camunda-platform*"

  release:
    name: Release - Camunda ${{ matrix.version }}
    if: ${{ needs.init.outputs.matrix != '[]' }}
    needs: init
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.init.outputs.matrix) }}
    permissions:
      contents: write
      id-token: write
    env:
      CAMUNDA_VERSION: ${{ matrix.version }}
    steps:
      # Init.
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Install tools
        uses: ./.github/actions/install-tool-versions
        with:
          tools: |
            helm
            helm-ct
            yq
      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1
      - name: Setup caching
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/.asdf/installs/golang/*/packages/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Add Helm repos
        run: |
          make helm.repos-add
      - name: Update Helm dependency
        run: |
          chartPath="$(ct list-changed | tr '\n' ' ')" \
            make helm.dependency-update

      # Preparation.
      - name: Remove Dev Comments
        run: |
          TARGET_FILES=(
            "charts/camunda-platform-*/values*.yaml"
            "charts/camunda-platform-*/Chart.yaml"
          )
          for FILE in "${TARGET_FILES[@]}"; do
            sed -i '/# START DEV COMMENT/,/# END DEV COMMENT/d' $FILE
          done
          echo "Dev comments removed:"
          git --no-pager diff
      - name: Tidy up
        run: |
          # Clean up badges from readme to avoid showing them in Artifact Hub.
          sed -ri '/Badge .+/d' charts/camunda-platform-${{ env.CAMUNDA_VERSION }}/README.md
          mkdir release-packages

      # Release.
      - name: Run Chart Releaser - Latest version
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        with:
          config: .github/config/chart-releaser.yaml
        env:
          CR_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          CR_SKIP_EXISTING: 'true'
  
      # Sign and upload the signature.
      - name: Set Helm chart vars
        run: |
          CHART_VERSION="$(yq '.version' charts/camunda-platform-${{ env.CAMUNDA_VERSION }}/Chart.yaml)"
          echo "CHART_PACKAGE_NAME=camunda-platform-${CHART_VERSION}" | tee -a $GITHUB_ENV
      - name: Sign Helm chart with Cosign
        run: |
          cosign sign-blob -y release-packages/${{ env.CHART_PACKAGE_NAME }}.tgz \
            --bundle "${{ env.CHART_PACKAGE_NAME }}.cosign.bundle"
      - name: Verify signed Helm chart with Cosign
        run: |
          cosign verify-blob release-packages/${{ env.CHART_PACKAGE_NAME }}.tgz \
            --bundle "${{ env.CHART_PACKAGE_NAME }}.cosign.bundle" \
            --certificate-identity "https://github.com/${GITHUB_WORKFLOW_REF}" \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com"
      - name: Upload Helm chart signature bundle
        run: |
          gh release upload "${{ env.CHART_PACKAGE_NAME }}" \
            "${{ env.CHART_PACKAGE_NAME }}.cosign.bundle" \
            --repo "${GITHUB_REPOSITORY}"
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  post-release:
    if: ${{ (contains(github.event.*.labels.*.name, 'release') && github.event.pull_request.merged == false) || github.event.inputs.trigger }}
    name: Post Release Chores
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # The verification step happens in the release branch before merging into the "main" branch.
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Install tools
        uses: ./.github/actions/install-tool-versions
        with:
          tools: |
            git-cliff
            gomplate
            helm
            helm-ct
            yq
      # - name: Simple smoke test
      #   uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3
      #   with:
      #     max_attempts: 3
      #     timeout_minutes: 5
      #     retry_wait_seconds: 10
      #     command: make release.verify-components-version
      - name: Label PRs with app and chart version
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          make release.set-prs-version-label
      - name: Generate version matrix
        run: |
          make helm.repos-add
          make release.generate-version-matrix-index
          make release.generate-version-matrix-released
      - uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          author_name: "renovate[bot]"
          author_email: "29139614+renovate[bot]@users.noreply.github.com"
          message: "chore: Generate version matrix [skip ci]"
