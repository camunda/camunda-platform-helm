name: Generate chart matrix
description: Find changed charts and generate matrix for changed ones only.
inputs:
  charts-path:
    description: Charts path to match.
    default: "charts/camunda-platform*"
  manual-trigger:
    description: Input used by workflow dispatch to trigger a build on a specific chart version
    default: "none"
outputs:
  matrix:
    description: JSON matrix of changed charts which will be used as and input for GHA workflow matrix.
    value: ${{ steps.set-chart-versions.outputs.matrix }}
runs:
  using: composite
  steps:
    - name: ℹ️ Print workflow inputs ℹ️
      shell: bash
      env:
        GITHUB_CONTEXT: ${{ toJson(inputs) }}
      run: |
        echo "Action Inputs:"
        echo "${GITHUB_CONTEXT}"
    - name: Get changed dirs
      id: changed-files
      uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
      with:
        dir_names: "true"
    - name: Generate matrix
      shell: bash
      id: set-chart-versions
      env:
        ALL_MODIFIED_FILES: ${{ steps.changed-files.outputs.all_modified_files }}
      run: |
        write_matrix_entry() {
          local camunda_version="$1"
          local chart_dir="$2"
          echo "  - version: ${camunda_version}" >> matrix_versions.txt
          echo "    case: pr" >> matrix_versions.txt
          if [ -f "$chart_dir/test/ci-test-config.yaml" ]; then
            readarray prScenarios < <(yq e -o=j -I=0 '.integration.scenarios.pr.[]' $chart_dir/test/ci-test-config.yaml)
            echo -n "    scenarios: \"" >> matrix_versions.txt
            for prScenario in "${prScenarios[@]}"; do
              enabled=$(echo "$prScenario" | yq e '.enabled' -)
              if [ "$enabled" = "false" ]; then
                continue
              fi
              name=$(echo "$prScenario" | yq e '.name' -)
              echo -n "$name," >>matrix_versions.txt
            done
            sed -i -e '$s/,$/"\n/' matrix_versions.txt
          fi
        }

        echo "Checking for manual-trigger"
        touch matrix_versions.txt
        echo "matrix:" > matrix_versions.txt
        if [[ "${{ inputs.manual-trigger }}" != "none" && "${{ inputs.manual-trigger }}" != "" ]]; then
          echo "Manual trigger detected: ${{ inputs.manual-trigger }}"
          chart_dir="charts/camunda-platform-${{ inputs.manual-trigger }}"
          if [ -d "$chart_dir" ]; then
            camunda_version="${{ inputs.manual-trigger }}"
            write_matrix_entry "$camunda_version" "$chart_dir"
          else
            echo "Chart directory $chart_dir does not exist. Aborting."
            exit 1
          fi
        else
          echo "Setting matrix based on changed files"
          echo "Changed files:"
          printf "%s\n" ${ALL_MODIFIED_FILES}
          ls -d ${{ inputs.charts-path }} | while read chart_dir; do
            if [[ $(echo ${ALL_MODIFIED_FILES} | grep "${chart_dir}") ]]; then
              camunda_version="$(basename ${chart_dir} | sed 's/camunda-platform-//')"
              write_matrix_entry "$camunda_version" "$chart_dir"
            fi
          done
        fi
        cat matrix_versions.txt

        if [ "$(cat matrix_versions.txt)" = "matrix:" ]; then
          echo "The matrix.txt file is empty. This workflow is only triggered when there are changes to the code. Aborting."
          exit 1
        fi

        matrix="$(cat matrix_versions.txt | yq -o=json '.matrix' | jq -c '{ "include": . }' | jq -c 'walk(if type == "number" then tostring else . end)')"
        echo "matrix=${matrix}" | tee -a $GITHUB_OUTPUT
